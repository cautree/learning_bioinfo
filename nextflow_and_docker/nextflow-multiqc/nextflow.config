#!/usr/bin/env nextflow

aws {
    region = 'us-east-2'
}

process {
    shell = ['/bin/bash', '-euo', 'pipefail']
}

params {
    help = false
    input = null
    fasta = null
    fasta_index = null
    bwa_index = null
    output = null
    targets = "$projectDir/assets/NO_FILE"

    validationSchemaIgnoreParams = [
        'bwa.mem.input_reads_per_batch',
        'mosdepth.coverage_bin_width',
        'mosdepth.coverage_thresholds',
        'samtools.markdup.duplicate_distance',
        'tn_seq.count_insertion_starts.min_interval_length'
    ]

    bwa {
        mem {
            input_reads_per_batch = 150000000
        }
    }

    mosdepth {
        coverage_bin_width = 500
        coverage_thresholds = "20,30"
    }

    samtools {
        markdup {
            duplicate_distance = 2500
        }
    }

    tn_seq {
        count_insertion_starts {
            min_interval_length = 100
        }
    }
}

plugins {
    id 'nf-dotenv'
    id 'nf-prov'
    id 'nf-amazon'
    id 'nf-validation'
}

profiles {
    awsbatch {
        aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'

        docker.enabled = true
        docker.registry = '512431263418.dkr.ecr.us-east-2.amazonaws.com'

        process {
            executor = 'awsbatch'

            queue = 'nextflow-20231220-m5family-disk200'

            withName: 'BWA_MEM' {
                queue = 'nextflow-20231222-cpu16-mem64-disk1000'
            }

            withName: 'COLLECT_HS_METRICS' {
                queue = 'nextflow-20231220-cpu8-mem32-disk200'
            }

            withName: 'COLLECT_MULTIPLE_METRICS|COLLECT_WGS_METRICS|POSITION_BASED_DOWNSAMPLE_SAM' {
                queue = 'nextflow-20231220-cpu4-mem16-disk200'
            }

            withName: 'FASTQC' {
                queue = 'nextflow-20231220-cpu8-mem32-disk200'
            }

            withName: 'MARK_DUPLICATES' {
                queue = 'nextflow-20231222-cpu16-mem64-disk1000'
            }

            withName: 'MOSDEPTH' {
                queue = 'nextflow-20231220-cpu8-mem32-disk200'
            }

            withName: 'TN_SEQ.*' {
                queue = 'nextflow-20231220-cpu4-mem16-disk200'
            }

            withName: 'TN_SEQ_COUNT_STARTS' {
                queue = 'nextflow-20231220-cpu8-mem32-disk200'
            }
        }
    }

    conda {
        conda.enabled = true
    }

    docker {
        docker.enabled = true
        docker.registry = '512431263418.dkr.ecr.us-east-2.amazonaws.com'
        docker.platform = 'linux/amd64'
    }

    local {
        process {
            executor = 'local'
            withName: '.*' {
                cpus = Math.min(16, Runtime.runtime.availableProcessors())
            }
        }
    }
}

def datetime = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

prov {
  enabled = true
  formats {
    bco {
      file = "${params.output}/logs/provenance_bco_${datetime}.json"
      overwrite = true
    }
    dag {
      file = "${params.output}/logs/provenance_dag_${datetime}.html"
      overwrite = true
    }
    legacy {
      file = "${params.output}/logs/provenance_manifest_${datetime}.json"
      overwrite = true
    }
  }
}

dag {
    enabled = true
    file = "${params.output}/logs/execution_dag_${datetime}.html"
}

report {
    enabled = true
    file = "${params.output}/logs/execution_report_${datetime}.html"
}

timeline {
    enabled = true
    file = "${params.output}/logs/execution_timeline_${datetime}.html"
}

trace {
    enabled = true
    file = "${params.output}/logs/execution_trace_${datetime}.txt"
    fields = 'task_id,hash,process,name,tag,container,status,exit,hostname,duration,realtime,submit,start,complete,cpus,memory,%cpu,%mem,rss,script'
}

manifest {
    name            = 'transposase_qc'
    author          = 'Clint Valentine, Fulcrum Genomics LLC'
    homePage        = 'https://gitlab.com/seqwell/deep_sequencing_codexis'
    description     = 'Transposase quality control workflow.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.3'
    version         = '0.1.0'
}
